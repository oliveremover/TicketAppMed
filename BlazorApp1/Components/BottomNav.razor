@inject NavigationManager NavigationManager

<nav class="bottom-nav">
    <a href="/" class="nav-item @GetActiveClass("/")">
            <i class="bi bi-house-door-fill"></i>
        <span>Home</span>
    </a>
    <a href="/tickets" class="nav-item @GetActiveClass("/tickets")">
            <i class="bi bi-ticket-fill"></i>
        <span>Tickets</span>
    </a>
    <a href="/scanner" class="nav-item @GetActiveClass("/scanner")">
        <div class="icon-circle">
            <i class="bi bi-qr-code-scan"></i>
        </div>
        <span>Scan</span>
    </a>
    <a href="/add" class="nav-item @GetActiveClass("/add")">
            <i class="bi bi-plus-lg"></i>
        <span>Add</span>
    </a>
    <a href="/meny" class="nav-item @GetActiveClass("/meny")">
            <i class="bi bi-grid-fill"></i>
        <span>Meny</span>
    </a>
</nav>

@code {
    private string GetActiveClass(string href)
    {
        var currentUri = NavigationManager.Uri;
        var currentPath = new Uri(currentUri).PathAndQuery;
        
        // Check if at root path
        if (href == "/" && (currentPath == "/" || string.IsNullOrEmpty(currentPath)))
            return "active";
            
        // Check for other paths
        if (href != "/" && currentPath.StartsWith(href))
            return "active";
            
        return "";
    }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += (sender, e) => StateHasChanged();
    }
}
