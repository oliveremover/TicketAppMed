@namespace BlazorApp1.Components.StatusBadge
@using BlazorApp1.Models

<div class="status-badge @StatusClass">
    <i class="bi @StatusIcon me-1"></i>
    @StatusText
</div>

@code {
    [Parameter]
    public object Status { get; set; } = TicketStatus.Open;

    [Parameter]
    public string StatusClass { get; set; } = "";
    
    [Parameter]
    public string StatusIcon { get; set; } = "";
    
    [Parameter]
    public string StatusText { get; set; } = "";

    protected override void OnInitialized()
    {
        if (Status != null)
        {
            if (Status is TicketStatus ticketStatus)
            {
                StatusClass = GetTicketStatusClass(ticketStatus);
                StatusIcon = GetTicketStatusIcon(ticketStatus);
                StatusText = ticketStatus.ToDisplayString();
            }
            else if (Status is EquipmentStatus equipmentStatus)
            {
                StatusClass = GetEquipmentStatusClass(equipmentStatus);
                StatusText = equipmentStatus.ToDisplayString();
            }
        }
        
        base.OnInitialized();
    }

    private string GetTicketStatusClass(TicketStatus status)
    {
        return status switch
        {
            TicketStatus.Open => "status-open",
            TicketStatus.Pending => "status-pending",
            TicketStatus.Closed => "status-closed",
            _ => "status-unknown"
        };
    }

    private string GetTicketStatusIcon(TicketStatus status)
    {
        return status switch
        {
            TicketStatus.Open => "bi-exclamation-circle",
            TicketStatus.Pending => "bi-hourglass-split",
            TicketStatus.Closed => "bi-check-circle",
            _ => "bi-question-circle"
        };
    }

    private string GetEquipmentStatusClass(EquipmentStatus status)
    {
        return status switch
        {
            EquipmentStatus.Available => "status-green",
            EquipmentStatus.InUse => "status-green",
            EquipmentStatus.UnderMaintenance => "status-red",
            EquipmentStatus.Defective => "status-red",
            _ => "status-unknown"
        };
    }
}