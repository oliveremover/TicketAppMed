@rendermode InteractiveServer
@inject IEquipmentService EquipmentService
@using BlazorApp1.Models
@using BlazorApp1.Services
@using BlazorApp1.Components.StatusBadge

<div class="wizard-step-container">
    <div class="wizard-content">
        <div class="mx-2">
            <h3>@(selectedEquipment != null ? "Utstyr valgt" : "Velg utstyr")</h3>
            <p>@(selectedEquipment != null ? "Utstyret nedenfor har blitt valgt for denne henvendelsen." : "Søk etter og velg utstyr for denne henvendelsen.")</p>
            
            @if (selectedEquipment == null)
            {
                <div class="search-header mb-3">
                    <Searchbar 
                        @bind-SearchTerm="searchTerm" 
                        OnSearch="SearchEquipment"
                        Placeholder="Søk etter utstyr" 
                        IconClass="bi bi-search" />
                </div>
            }
            
            <div class="equipment-search-container">
                @if (isSearching)
                {
                    <div class="search-feedback text-center p-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Søker...</span>
                        </div>
                        <p class="mt-2">Søker etter utstyr...</p>
                    </div>
                }
                else if (searchResults.Any() && !string.IsNullOrEmpty(searchTerm) && selectedEquipment == null)
                {
                    <div class="equipment-list">
                        @foreach (var equipment in searchResults)
                        {
                            <div class="equipment-item" 
                                 @onclick="() => SelectEquipment(equipment.EquipmentNumber)">
                                <div class="equipment-content">
                                    <div class="equipment-icon">
                                        <i class="bi bi-hdd"></i>
                                    </div>
                                    <div class="equipment-info">
                                        <div class="equipment-primary">
                                            <div class="equipment-name">@equipment.DeviceType</div>
                                            <div class="equipment-brand">@equipment.Brand</div>
                                        </div>
                                        <div class="equipment-secondary">
                                            <div class="equipment-model">
                                                <i class="bi bi-tag-fill me-1"></i>@equipment.Model
                                            </div>
                                            <div class="equipment-serial">
                                                <i class="bi bi-upc me-1"></i>@equipment.SerialNumber
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else if (!string.IsNullOrEmpty(searchTerm) && selectedEquipment == null)
                {
                    <div class="empty-results">
                        <i class="bi bi-search large-icon"></i>
                        <p class="empty-title">Ingen utstyr funnet</p>
                        <p class="empty-message">Prøv andre søkeord</p>
                        <button class="btn btn-outline-secondary mt-2" @onclick="ClearSearch">
                            <i class="bi bi-arrow-counterclockwise me-1"></i>Tøm søk
                        </button>
                    </div>
                }
                else if (selectedEquipment == null)
                {
                    <div class="initial-state">
                        <i class="bi bi-tools large-icon"></i>
                        <p class="empty-title">Søk etter utstyr</p>
                        <p class="empty-message">Skriv i søkefeltet for å finne utstyr</p>
                    </div>
                }
            </div>

            @if (selectedEquipment != null)
            {
                <div class="selected-equipment-info mt-3">
                    <div class="equipment-card enhanced">
                        <div class="equipment-header">
                            <div class="title-status-group">
                                <h5>@selectedEquipment.DeviceType</h5>
                                <StatusBadge Status="@selectedEquipment.Status" />
                            </div>
                            <button class="btn btn-sm btn-outline-danger remove-btn" @onclick="RemoveSelectedEquipment" aria-label="Remove equipment">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>

                        <div class="equipment-content">
                            @if (!string.IsNullOrEmpty(selectedEquipment.ImageUrl))
                            {
                                <div class="equipment-image-container">
                                    <img src="@selectedEquipment.ImageUrl" alt="@selectedEquipment.DeviceType" />
                                </div>
                            }
                            <div class="equipment-details">
                                <div class="equipment-detail-item">
                                    <div class="label">Eq. no:</div>
                                    <div class="value">@selectedEquipment.EquipmentNumber</div>
                                </div>
                                <div class="equipment-detail-item">
                                    <div class="label">Brand:</div>
                                    <div class="value">@selectedEquipment.Brand</div>
                                </div>
                                <div class="equipment-detail-item">
                                    <div class="label">Modell:</div>
                                    <div class="value">@selectedEquipment.Model</div>
                                </div>
                                <div class="equipment-detail-item">
                                    <div class="label">Serienummer:</div>
                                    <div class="value">@selectedEquipment.SerialNumber</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="switches-section mt-3">
                        <h5 class="mb-2">Tilleggsvalg</h5>
                        
                        <div class="options-container">
                            <div class="custom-switch-container">
                                <label class="custom-switch-label" for="isContaminated">
                                    <span>Utstyret er forurenset</span>
                                </label>
                                <div class="custom-switch-input">
                                    <label class="toggle-switch">
                                        <input type="checkbox" id="isContaminated" @bind="Model.isContaminated">
                                        <span class="toggle-slider"></span>
                                    </label>
                                </div>
                            </div>
                            
                            <div class="custom-switch-container">
                                <label class="custom-switch-label" for="isCleaned">
                                    <span>Er apparatet rengjort?</span>
                                </label>
                                <div class="custom-switch-input">
                                    <label class="toggle-switch">
                                        <input type="checkbox" id="isCleaned" @bind="Model.isCleaned">
                                        <span class="toggle-slider"></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    public WizardModel Model { get; set; } = default!;

    [Parameter]
    public EventCallback OnEquipmentSelected { get; set; }

    private string searchTerm = "";
    private bool isSearching = false;
    private List<Equipment> searchResults = new();
    private int? selectedEquipmentNumber;
    private Equipment? selectedEquipment;
    
    protected override async Task OnInitializedAsync()
    {
        // If model already has equipment info stored, load it
        if (Model.EquipmentNumber.HasValue)
        {
            var equipment = await EquipmentService.GetEquipmentByNumberAsync(Model.EquipmentNumber.Value);
            if (equipment != null)
            {
                selectedEquipment = equipment;
                selectedEquipmentNumber = equipment.EquipmentNumber;
            }
        }
    }

    private async Task SearchEquipment()
    {
        // Only search if we have a search term
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            searchResults.Clear();
            return;
        }
        
        isSearching = true;
        StateHasChanged();
        
        // Debounce search input
        await Task.Delay(300);
        
        searchResults = await EquipmentService.SearchEquipmentAsync(searchTerm);
        isSearching = false;
    }

    private void ClearSearch()
    {
        searchTerm = "";
        searchResults.Clear();
    }

    private async Task SelectEquipment(int equipmentId)
    {
        selectedEquipmentNumber = equipmentId;
        var equipment = await EquipmentService.GetEquipmentByIdAsync(equipmentId);
        
        if (equipment != null)
        {
            selectedEquipment = equipment;
            Model.EquipmentNumber = equipment.EquipmentNumber;
            
            // We can store a description in the existing Equipment property
            Model.Equipment = $"{equipment.DeviceType} {equipment.Brand} {equipment.Model}";
            
            // Clear the search
            searchTerm = "";
            searchResults.Clear();
            
            // Optional: notify parent component that equipment was selected
            // await OnEquipmentSelected.InvokeAsync();
        }
    }

    private async Task RemoveSelectedEquipment()
    {
        selectedEquipmentNumber = null;
        selectedEquipment = null;
        Model.EquipmentNumber = null;
        Model.Equipment = null;
    }
}